# Nginx configuration for {{DOMAIN}} - Multi-tenant setup
# This sits behind Cloudflare and proxies to the multi-tenant Docker container

server {
    listen 80;
    listen [::]:80;
    server_name {{DOMAIN}} www.{{DOMAIN}};
    
    # Since we're behind Cloudflare, we can handle both HTTP and HTTPS here
    # Cloudflare will handle the SSL termination
    
    # Get real IP from Cloudflare
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2c0f:f248::/32;
    set_real_ip_from 2a06:98c0::/29;
    real_ip_header CF-Connecting-IP;
    
    # Security headers (Cloudflare will add more)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Custom includes for domain-specific routes MUST come first
    # These override the default routing for specific paths
    include /etc/nginx/includes/{{DOMAIN}}.conf*;
    
    # Default: proxy everything else to the multi-tenant container
    # This container runs on a high port (e.g., 8000) not 80
    location / {
        proxy_pass http://127.0.0.1:{{CONTAINER_PORT}};
        proxy_http_version 1.1;
        
        # Important: Pass the original host header so the container knows which site
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pass Cloudflare headers
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-IPCountry $http_cf_ipcountry;
        proxy_set_header CF-RAY $http_cf_ray;
        proxy_set_header CF-Visitor $http_cf_visitor;
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        send_timeout 60s;
        
        # Buffering
        proxy_buffering off;
        proxy_request_buffering off;
    }
    
    # Health check endpoint (doesn't need to hit the container)
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Client body size (for uploads)
    client_max_body_size {{MAX_UPLOAD_SIZE}};
    
    # Logging
    access_log /var/log/nginx/{{SITE_NAME}}_access.log;
    error_log /var/log/nginx/{{SITE_NAME}}_error.log;
}

# Optional: Handle direct IP access or undefined domains
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    
    return 444; # Close connection without response
}