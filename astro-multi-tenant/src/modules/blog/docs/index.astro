---
import Layout from '../../../layouts/Layout.astro';
import { API_URL } from '../../../shared/lib/api-config';

// Fetch posts from API
const currentCategory = Astro.url.searchParams.get('category');
const postsUrl = currentCategory 
  ? `${API_URL}/api/posts?type=docs&category=${currentCategory}`
  : `${API_URL}/api/posts?type=docs`;
const response = await fetch(postsUrl);
const posts = response.ok ? await response.json() : [];

// Fetch categories
const categoryResponse = await fetch(`${API_URL}/api/categories?type=docs`);
const categories = categoryResponse.ok ? await categoryResponse.json() : [];
---

<Layout title="Documentation">
  <main class="container mx-auto px-4 py-8 max-w-7xl">
    <div class="mb-8">
      <h1 class="text-4xl font-bold mb-4">Documentation</h1>
      
      <!-- Category Filter -->
      <div class="flex gap-2 flex-wrap">
        <a href="/blog/docs" class={`px-4 py-2 rounded-full transition ${!currentCategory ? 'bg-primary text-text-primary' : 'bg-surface text-text-secondary hover:bg-surface-hover'}`}>
          All
        </a>
        {categories.map((category: any) => (
          <a 
            href={`/blog/docs?category=${category.slug}`} 
            class={`px-4 py-2 rounded-full transition ${currentCategory === category.slug ? 'bg-primary text-text-primary' : 'bg-surface text-text-secondary hover:bg-surface-hover'}`}
          >
            {category.name}
          </a>
        ))}
      </div>
    </div>

    <!-- Docs Posts Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {posts.map((post: any) => {
        // Parse the date safely - try multiple fields
        const postDate = post.publishDate || post.publishedAt || post.createdAt || post.created_at || post.updatedAt;
        const validDate = postDate && !isNaN(new Date(postDate).getTime());
        const formattedDate = validDate 
          ? new Date(postDate).toLocaleDateString('en-US', { 
              year: 'numeric', 
              month: 'short', 
              day: 'numeric' 
            })
          : 'Draft';
        
        return (
          <a href={`/blog/docs/${post.slug}`} class="block group">
            <article class="bg-surface border border-border rounded-lg overflow-hidden group-hover:border-border transition shadow-lg cursor-pointer h-full">
              {post.coverImage && (
                <div class="h-48 overflow-hidden">
                  <img 
                    src={post.coverImage} 
                    alt={post.title}
                    class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-200"
                  />
                </div>
              )}
              <div class="p-6">
                <h2 class="text-xl font-semibold mb-2 text-text-primary group-hover:text-link transition">
                  {post.title}
                </h2>
                <p class="text-text-muted mb-4 line-clamp-3">
                  {post.excerpt || post.description || 'No description available.'}
                </p>
                <div class="flex justify-between items-center text-sm text-text-muted">
                  <span>{formattedDate}</span>
                  {post.category_data && (
                    <span class="bg-surface-hover text-text-secondary px-2 py-1 rounded">
                      {post.category_data.name}
                    </span>
                  )}
                </div>
              </div>
            </article>
          </a>
        );
      })}
    </div>

    {posts.length === 0 && (
      <div class="text-center py-12 text-text-muted">
        <p>No documentation found.</p>
      </div>
    )}
  </main>
</Layout>