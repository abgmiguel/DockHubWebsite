---
const { data = {} } = Astro.props;
const {
  title = "DarkFlows Router OS",
  subtitle = "High Performance Routing and Firewalling Reimagined",
  finalTitle = "Powerful and Easy to Use",
  finalSubtitle = "Latency free gaming, high performance traffic shaping, and easy to use dashboard",
  image = "/laptop.png"
} = data;
---

<div class="relative min-h-[300vh] bg-transparent">
  <!-- First section - Initial view -->
  <div class="sticky top-0 h-screen flex items-start pt-96 justify-center overflow-hidden">
    <div class="max-w-7xl mx-auto px-4 w-full relative">
      <!-- Text content -->
      <div 
        id="hero-text"
        class="text-white text-center transition-opacity duration-500"
      >
        <h1 class="text-4xl md:text-6xl font-bold mb-6">
          {title}
        </h1>
        <p class="text-xl md:text-2xl text-gray-300">
          {subtitle}
        </p>

        <!-- Scroll indicator -->
        <div 
          id="scroll-indicator-1"
          class="absolute bottom-48 left-1/2 -translate-x-1/2 text-center animate-bounce"
        >
          <p class="text-gray-400 mb-2">Scroll Down</p>
          <div class="flex flex-col items-center gap-1">
            <svg 
              class="w-6 h-6 text-gray-400" 
              fill="none" 
              stroke="currentColor" 
              viewBox="0 0 24 24"
            >
              <path 
                stroke-linecap="round" 
                stroke-linejoin="round" 
                stroke-width="2" 
                d="M19 14l-7 7m0 0l-7-7m7 7V3" 
              />
            </svg>
            <svg 
              class="w-6 h-6 text-gray-400" 
              fill="none" 
              stroke="currentColor" 
              viewBox="0 0 24 24"
            >
              <path 
                stroke-linecap="round" 
                stroke-linejoin="round" 
                stroke-width="2" 
                d="M19 14l-7 7m0 0l-7-7m7 7V3" 
              />
            </svg>
          </div>
        </div>
      </div>

      <!-- Laptop image container -->
      <div class="absolute inset-0 flex items-center justify-center">
        <div
          id="laptop-container"
          class="relative w-full max-w-[900px] transition-all duration-1000 opacity-0"
        >
          <img
            src={image}
            alt="Laptop Display"
            width="900"
            height="600"
            class="w-full h-auto object-contain transition-transform duration-1000"
            id="laptop-image"
          />

          <!-- Second scroll indicator - appears with laptop -->
          <div 
            id="scroll-indicator-2"
            class="absolute -bottom-16 left-1/2 -translate-x-1/2 text-center animate-bounce opacity-0 transition-opacity duration-500"
          >
            <p class="text-gray-400 mb-2">Keep Scrolling</p>
            <div class="flex flex-col items-center gap-1">
              <svg 
                class="w-6 h-6 text-gray-400" 
                fill="none" 
                stroke="currentColor" 
                viewBox="0 0 24 24"
              >
                <path 
                  stroke-linecap="round" 
                  stroke-linejoin="round" 
                  stroke-width="2" 
                  d="M19 14l-7 7m0 0l-7-7m7 7V3" 
                />
              </svg>
              <svg 
                class="w-6 h-6 text-gray-400" 
                fill="none" 
                stroke="currentColor" 
                viewBox="0 0 24 24"
              >
                <path 
                  stroke-linecap="round" 
                  stroke-linejoin="round" 
                  stroke-width="2" 
                  d="M19 14l-7 7m0 0l-7-7m7 7V3" 
                />
              </svg>
            </div>
          </div>
        </div>
      </div>

      <!-- Final text overlay -->
      <div 
        id="final-text"
        class="absolute inset-0 flex items-center justify-center transition-opacity duration-500 opacity-0"
      >
        <div class="text-white text-center">
          <h2 class="text-3xl md:text-5xl font-bold mb-4">
            {finalTitle}
          </h2>
          <p class="text-lg md:text-xl text-gray-300">
            {finalSubtitle}
          </p>
        </div>
      </div>
    </div>
  </div>

  <!-- Continue Scrolling indicator -->
  <div 
    id="continue-scrolling"
    class="fixed bottom-12 left-1/2 -translate-x-1/2 w-full max-w-xl text-center z-50 opacity-0 transition-opacity duration-500"
  >
    <div class="flex items-center justify-center gap-4 bg-black/50 backdrop-blur-sm py-2 px-4 rounded-full">
      <svg 
        class="w-8 h-8 text-white rotate-180" 
        fill="none" 
        stroke="currentColor" 
        viewBox="0 0 24 24"
      >
        <path 
          stroke-linecap="round" 
          stroke-linejoin="round" 
          stroke-width="2" 
          d="M19 14l-7 7m0 0l-7-7m7 7V3" 
        />
      </svg>
      
      <p class="text-white text-lg font-medium">Continue Scrolling</p>
      
      <svg 
        class="w-8 h-8 text-white" 
        fill="none" 
        stroke="currentColor" 
        viewBox="0 0 24 24"
      >
        <path 
          stroke-linecap="round" 
          stroke-linejoin="round" 
          stroke-width="2" 
          d="M19 14l-7 7m0 0l-7-7m7 7V3" 
        />
      </svg>
    </div>
  </div>
</div>

<script>
  const heroText = document.getElementById('hero-text');
  const laptopContainer = document.getElementById('laptop-container');
  const laptopImage = document.getElementById('laptop-image');
  const scrollIndicator1 = document.getElementById('scroll-indicator-1');
  const scrollIndicator2 = document.getElementById('scroll-indicator-2');
  const finalText = document.getElementById('final-text');
  const continueScrolling = document.getElementById('continue-scrolling');
  
  let scrollPosition = 0;
  let nextSectionVisible = false;

  function handleScroll() {
    const position = window.scrollY;
    const windowHeight = window.innerHeight;
    scrollPosition = Math.min((position / windowHeight) * 100, 100);

    // Hero text fade out
    if (heroText) {
      heroText.style.opacity = scrollPosition < 33 ? '1' : '0';
    }

    // First scroll indicator
    if (scrollIndicator1) {
      scrollIndicator1.style.opacity = scrollPosition < 10 ? '1' : '0';
    }

    // Laptop animation
    if (laptopContainer) {
      const scale = Math.min(1 + scrollPosition / 50, 1.2);
      const opacity = Math.max(0, Math.min((scrollPosition - 10) / 50, 1));
      laptopContainer.style.transform = `scale(${scale})`;
      laptopContainer.style.opacity = opacity;
    }

    if (laptopImage) {
      laptopImage.style.transform = `translateY(${scrollPosition > 50 ? 0 : 100}px)`;
    }

    // Second scroll indicator
    if (scrollIndicator2) {
      scrollIndicator2.style.opacity = scrollPosition > 33 && scrollPosition < 66 ? '1' : '0';
    }

    // Final text
    if (finalText) {
      finalText.style.opacity = scrollPosition >= 100 ? '1' : '0';
    }

    // Check if first DataConnectSection is visible
    const firstSection = document.getElementById('data-section-0a');
    if (firstSection) {
      const rect = firstSection.getBoundingClientRect();
      nextSectionVisible = rect.top < window.innerHeight - 100;
    }

    // Continue scrolling indicator
    if (continueScrolling) {
      continueScrolling.style.opacity = scrollPosition >= 33 && !nextSectionVisible ? '1' : '0';
    }
  }

  window.addEventListener('scroll', handleScroll);
  handleScroll();
</script>